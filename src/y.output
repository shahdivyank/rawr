Terminals unused in grammar

   ADD
   SUB
   MULT
   DIV
   EQUALS
   L_PAR
   R_PAR
   L_BRACE
   R_BRACE
   L_BRACKET
   R_BRACKET
   EQS_TO
   NOT_EQS_TO
   G_THAN
   G_THAN_EQUALS
   L_THAN
   L_THAN_EQUALS
   AND
   OR
   SEMICOLON
   COLON
   COMMA
   INT
   IF
   ELSE
   WHILE
   BR
   CONT
   READ
   WRITE
   RET
   FUNCT
   ARRAY
   NUMBER


Grammar

    0 $accept: prog_start $end

    1 prog_start: %empty
    2           | MAIN


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258)
SUB (259)
MULT (260)
DIV (261)
EQUALS (262)
L_PAR (263)
R_PAR (264)
L_BRACE (265)
R_BRACE (266)
L_BRACKET (267)
R_BRACKET (268)
EQS_TO (269)
NOT_EQS_TO (270)
G_THAN (271)
G_THAN_EQUALS (272)
L_THAN (273)
L_THAN_EQUALS (274)
AND (275)
OR (276)
SEMICOLON (277)
COLON (278)
COMMA (279)
INT (280)
IF (281)
ELSE (282)
WHILE (283)
BR (284)
CONT (285)
READ (286)
WRITE (287)
MAIN (288) 2
RET (289)
FUNCT (290)
ARRAY (291)
NUMBER (292)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
prog_start (39)
    on left: 1 2, on right: 0


State 0

    0 $accept: . prog_start $end

    MAIN  shift, and go to state 1

    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 2


State 1

    2 prog_start: MAIN .

    $default  reduce using rule 2 (prog_start)


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 3


State 3

    0 $accept: prog_start $end .

    $default  accept
